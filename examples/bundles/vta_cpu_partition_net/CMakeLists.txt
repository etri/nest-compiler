option(NEST_BUILD_ON_MAC "Set configurations for building in MAC environment." OFF)
#set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${GLOW_BINARY_DIR}/bundles)
set(MODEL_INPUT_NAME "data")
#set(IMAGES ${GLOW_SOURCE_DIR}/tests/images/imagenet)

# Output directories for regular and quantized outputs
#set(RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/resnet18_vta_cpu_partition)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${NESTC_BINARY_DIR}/bundles)
set(RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR})

add_custom_target(ResNet18VTAPartitionBundleDir ALL
        COMMAND ${CMAKE_COMMAND} -E make_directory ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}
        )

# Final Executables
# =================
# Regular

add_executable(ResNet18VTAPartitionBundle $<TARGET_OBJECTS:ResNet18VTAPartitionBundleMain>)
set_target_properties(ResNet18VTAPartitionBundle PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY})
if(NOT NEST_BUILD_ON_MAC)
    target_link_libraries(ResNet18VTAPartitionBundle ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p0.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p1.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p2.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p3.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p4.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p5.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p6.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p7.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p8.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p9.o
            ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p10.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p11.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p12.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p13.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p14.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p15.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p16.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p17.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p18.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p19.o
            ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p20.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p21.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p22.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p23.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p24.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p25.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p26.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p27.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p28.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p29.o
            ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p30.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p31.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p32.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p33.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p34.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p35.o png)
else()
    target_link_libraries(ResNet18VTAPartitionBundle ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p0.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p1.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p2.o /usr/local/lib/libpng.a /usr/local/Cellar/zlib/1.2.11/lib/libz.a)
endif()

add_dependencies(ResNet18VTAPartitionBundle ResNet18VTAPartitionBundleMain ResNet18VTAPartitionBundleNet)

# Glow Bundles
# ============
# Regular Bundle
#add_custom_command(
#        OUTPUT
#        ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p0.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p1.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p2.o
#        COMMAND
#        model-partition-tuner -model=${GLOW_SOURCE_DIR}/tests/models/onnxModels/resnet18v2.onnx
#        -model-input=${MODEL_INPUT_NAME},float,[1,3,224,224]
#        -load-device-configs=${GLOW_SOURCE_DIR}/tests/runtime_test/OSTestDeviceConfigs.yaml
#        -partition-plan=${GLOW_SOURCE_DIR}/tests/runtime_test/partition_perform_profile/OSTestPartitionPlan.yaml
#        -exe-type=0
#        -emit-bundle=${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}
#        -bundle-api=dynamic
#        DEPENDS
#        model-partition-tuner ResNet18VTAPartitionBundleDir
#)
add_custom_command(
        OUTPUT
        ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p0.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p1.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p2.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p3.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p4.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p5.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p6.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p7.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p8.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p9.o
        ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p10.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p11.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p12.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p13.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p14.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p15.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p16.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p17.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p18.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p19.o
        ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p20.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p21.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p22.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p23.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p24.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p25.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p26.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p27.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p28.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p29.o
        ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p30.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p31.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p32.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p33.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p34.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p35.o
        COMMAND
        model-partition-tuner -model=${NESTC_BINARY_DIR}/models/mxnet_exported_resnet18.onnx
        -model-input=${MODEL_INPUT_NAME},float,[1,224,224,3]
        -load-device-configs=${NESTC_ROOT_DIR}/tests/runtime_test/OSTestDeviceConfigs.yaml
        -partition-plan=${NESTC_ROOT_DIR}/tests/runtime_test/partition_perform_profile/CPUTestPartitionPlanMxNet.yaml
        -exe-type=0
        -emit-bundle=${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}
        -bundle-api=dynamic
#        -target=aarch64
#        -mcpu=cortex-a53
#        -load-vta-profile=${GLOW_SOURCE_DIR}/tests/models/nestModels/mxnet_exported_resnet18/mxnet_exported_resnet18_calib_1.yaml
        DEPENDS
        model-partition-tuner ResNet18VTAPartitionBundleDir MxnetResnet18ONNXDownload
)

add_custom_command(
        TARGET ResNet18VTAPartitionBundle POST_BUILD
        COMMAND
        ls ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/main.cpp)

add_custom_command(
        TARGET ResNet18VTAPartitionBundle POST_BUILD
        COMMAND
        ls ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/CMakeLists.txt)

if(GLOW_WITH_VTA_BUNDLE_TEST)
    add_custom_command(
            TARGET ResNet18VTAPartitionBundle POST_BUILD
            COMMAND ${CMAKE_COMMAND}
            -E chdir ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY} ./ResNet18VTAPartitionBundle ${GLOW_SOURCE_DIR}/tests/images/imagenet/cat_285.png
    )
    add_custom_command(
            TARGET ResNet18VTAPartitionBundle POST_BUILD
            COMMAND
            echo "ResNet18PartitionBundle Test Succeed")
endif()
#============ resnet18v2.onnx ================
#add_custom_command(
#        OUTPUT
#        ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p0.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p1.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p2.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p3.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p4.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p5.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p6.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p7.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p8.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p9.o
#        ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p10.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p11.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p12.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p13.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p14.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p15.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p16.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p17.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p18.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p19.o
#        ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p20.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p21.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p22.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p23.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p24.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p25.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p26.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p27.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p28.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p29.o
#        ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p30.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p31.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p32.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p33.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p34.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p35.o
#        COMMAND
#        imagenet-partition-profiler ${GLOW_SOURCE_DIR}/tests/images/imagenet/cat_285.png
#        -image-mode=0to1
#        -model-input-name=${MODEL_INPUT_NAME}
#        -m=${GLOW_SOURCE_DIR}/tests/models/onnxModels/resnet18v2.onnx
#        -load-device-configs=${GLOW_SOURCE_DIR}/tests/runtime_test/CPUTestDeviceConfigs.yaml
#        -partition-plan=${GLOW_SOURCE_DIR}/tests/runtime_test/partition_perform_profile/CPUTestPartitionPlan.yaml
#        -emit-bundle=${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}
#        -bundle-api=dynamic
#        -time
#        DEPENDS
#        imagenet-partition-profiler ResNet18VTAPartitionBundleDir
#)

####============ mxnet_exported_resnet18.onnx ================
#add_custom_command(
#        OUTPUT
#        ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p0.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p1.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p2.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p3.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p4.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p5.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p6.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p7.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p8.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p9.o
#        ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p10.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p11.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p12.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p13.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p14.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p15.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p16.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p17.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p18.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p19.o
#        ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p20.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p21.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p22.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p23.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p24.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p25.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p26.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p27.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p28.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p29.o
#        ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p30.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p31.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p32.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p33.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p34.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p35.o
#        COMMAND
#        imagenet-partition-profiler ${GLOW_SOURCE_DIR}/tests/images/imagenet/cat_285.png
#        -image-layout=NHWC
#        -compute-softmax
#        -image-mode=0to255
#        -model-input-name=${MODEL_INPUT_NAME}
#        -m=${GLOW_SOURCE_DIR}/tests/models/nestModels/mxnet_exported_resnet18/mxnet_exported_resnet18.onnx
#        -load-device-configs=${GLOW_SOURCE_DIR}/tests/runtime_test/CPUTestDeviceConfigs.yaml
#        -partition-plan=${GLOW_SOURCE_DIR}/tests/runtime_test/partition_perform_profile/CPUTestPartitionPlanMxNet.yaml
#        -emit-bundle=${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}
#        -bundle-api=dynamic
#        -time
##        -target=aarch64
##        -mcpu=cortex-a53
#        DEPENDS
#        imagenet-partition-profiler ResNet18VTAPartitionBundleDir
#)


add_custom_target(ResNet18VTAPartitionBundleNet DEPENDS ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p0.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p1.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p2.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p3.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p4.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p5.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p6.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p7.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p8.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p9.o
        ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p10.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p11.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p12.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p13.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p14.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p15.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p16.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p17.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p18.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p19.o
        ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p20.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p21.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p22.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p23.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p24.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p25.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p26.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p27.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p28.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p29.o
        ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p30.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p31.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p32.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p33.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p34.o ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY}/p35.o)

# Other
# =====
# Driver program with main function for regular bundle
add_library(ResNet18VTAPartitionBundleMain OBJECT main.cpp)
if(NOT NEST_BUILD_ON_MAC)
    target_compile_options(ResNet18VTAPartitionBundleMain PRIVATE -std=c++11 -g)
else()
    target_compile_options(ResNet18VTAPartitionBundleMain PRIVATE -std=c++11 -g -I/usr/local/include -L/usr/local/lib -w -lz -lpng)
endif()
target_include_directories(ResNet18VTAPartitionBundleMain PUBLIC ${RESNET18_VTA_PARTITION_BUNDLE_OUTPUT_DIRECTORY})
add_dependencies(ResNet18VTAPartitionBundleMain ResNet18VTAPartitionBundleNet)

add_nestc_test(NAME ResNet18VTAPartitionBundle COMMAND ${CMAKE_CURRENT_BINARY_DIR}/ResNet18VTAPartitionBundle USE_SH 1 PARAMS ${GLOW_SOURCE_DIR}/tests/images/imagenet/cat_285.png)
